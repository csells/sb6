<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://csells.github.io/sb6/subfeeds/feed20.atom</id>
  <title>Marquee de Sells</title>
  <updated>2019-08-04T07:00:00.000Z</updated>
  <link rel="first" href="https://csells.github.io/sb6/feed.atom"/>
  <link rel="last" href="https://csells.github.io/sb6/subfeeds/feed178.atom"/>
  <link rel="previous" href="https://csells.github.io/sb6/subfeeds/feed19.atom"/>
  <link rel="next" href="https://csells.github.io/sb6/subfeeds/feed21.atom"/>
  <link rel="self" href="https://csells.github.io/sb6/subfeeds/feed20.atom"/>
  <author>
    <name>Chris Sells</name>
    <uri>https://csells.github.io/sb6/</uri>
    <email>csells@sellsbrothers.com</email>
  </author>
  <category term=".net" label=".NET"/>
  <category term="book" label="Books"/>
  <category term="books" label="Books"/>
  <category term="colophon" label="Colophon"/>
  <category term="conference" label="Conference"/>
  <category term="data" label="Data"/>
  <category term="fun" label="Fun"/>
  <category term="interview" label="Interviewing"/>
  <category term="money" label="Money"/>
  <category term="oslofeaturedcontent" label="Oslo"/>
  <category term="osloeditorial" label="Oslo"/>
  <category term="oslo" label="Oslo"/>
  <category term="telerik" label="Telerik"/>
  <category term="spout" label="The Spout"/>
  <category term="tools" label="Tools"/>
  <category term="win8" label="Windows 8"/>
  <category term="writing" label="Writing"/>
  <icon>https://csells.github.io/sb6//public/favicon.ico</icon>
  <logo>https://csells.github.io/sb6//public/images/vikingme128x128.jpg</logo>
  <subtitle>Chris's insight outlet</subtitle>
  <entry>
    <id>https://csells.github.io/sb6/2131</id>
    <title>Working Remotely for Microsoft: Can I Find Someone To Let Me Work From Home?</title>
    <updated>2007-10-24T07:00:00.000Z</updated>
    <category term="spout" label="The Spout"/>
    <published>2007-10-24T07:00:00.000Z</published>
    <summary>Assuming you decide you can and want to work from home for Microsoft, now the trick is finding someone that will take you. The first time, this took me years. As my writing and speaking became more popular, I'd get more regular calls from someone at Microsoft with "the perfect job for me." Each time, I'd ask them if I had to move and when they replied, "Of course" as if the entire pool of worthy workers lived in Washington, I'd politely decline. Eventually when the question came up, Sara Williams said, "No ...</summary>
    <content type="html">&lt;h1>Working Remotely for Microsoft: Can I Find Someone To Let Me Work From Home?&lt;/h1>
&lt;P class=MsoNormal>Assuming you decide you can and want to work from home for Microsoft, now the trick is finding someone that will take you. The first time, this took me years. As my writing and speaking became more popular, I'd get more regular calls from someone at Microsoft with "the perfect job for me." Each time, I'd ask them if I had to move and when they replied, "Of course" as if the entire pool of worthy workers lived in Washington, I'd politely decline. Eventually when the question came up, Sara Williams said, "No need to move" and I went to work for MSDN. As is often the case with one's first Microsoft job, it wasn't a long-term fit (a software engineer needs to be on a product team!), but finding a product team took me took 6 months of digging. All the groups I talked to wanted me and they all were happy to move me (some even offered to move my extended family up, too, eliminating my main anchor for staying in OR), but culturally they just didn't know what to do with a remote guy.&lt;/P>
&lt;P class=MsoNormal>Eventually, persistence, and my long experience working remotely, paid off and I actually had two competing offers (and I'm *so* happy about the one I chose). Microsoft has a *ton* of open positions and they get more open about remote employees all the time. Keep at it!&lt;/P>
&lt;P class=MsoNormal>Tomorrow: &lt;a href="/2132">Can You Communicate Effectively From Home?&lt;/a>&lt;/P></content>
  </entry>
  <entry>
    <id>https://csells.github.io/sb6/2130</id>
    <title>Working Remotely for Microsoft: Can You Focus On Work At Home?</title>
    <updated>2007-10-23T07:00:00.000Z</updated>
    <category term="spout" label="The Spout"/>
    <published>2007-10-23T07:00:00.000Z</published>
    <summary>First off, I don't recommend remote work for folks who don't like spending the vast majority of their time away from their colleagues, sometimes having trouble focusing on the work in favor of household duties or interactions. In fact, the ability to focus on work while at home is the #1 issue you'll have to face as a remote employee and I've seen it drive 80% of folks back to the office. I've always been naturally in the 20% bucket on that issue. As an example, when I first started at DevelopMentor, my off...</summary>
    <content type="html">&lt;h1>Working Remotely for Microsoft: Can You Focus On Work At Home?&lt;/h1>
&lt;p>First off, I don't recommend remote work for folks who don't like spending the vast majority of their time away from their colleagues, sometimes having trouble focusing on the work in favor of household duties or interactions. In fact, the ability to focus on work while at home is the #1 issue you'll have to face as a remote employee and I've seen it drive 80% of folks back to the office. I've always been naturally in the 20% bucket on that issue.&lt;/p>

&lt;p>As an example, when I first started at DevelopMentor, my office was in an open back room separated from the dining room by a hallway kitchen. My two infant boys had me in clear view when I was handcrafting RPC packets for communication with a DCOM server, hanging on the child gate, crying for me to play with them. My wife also had in plain sight when she wanted something from the high shelf. My family often heard me protest, "You know, I am actually working over here!" I eventually built a door, purchased Melissa a stool and learned to be very mushy about the split between work and home life. My family's actually been very supportive and I've always preferred the work environment I've established at home over any I've ever had from an employer, if for no other reason than my home has my family in it.&lt;/p>

&lt;p>My advice to anyone that wants to switch to remote work is to try it for a month or two first. Are you able to balance work and family life when you're at home? Are you able to go for days or weeks without the hallway conversations with your colleagues? Can you communicate effectively in ways that aren't face-to-face? If you don't like it, don't force yourself into it. For example, while DM instructors didn't seem to have any attrition due to remote work, all of the names I listed above as remote Microsoft employees have either quit, moved to Redmond or complained bitterly during their transition (Scott's still new : ).&lt;/p>

&lt;p>Tomorrow I'll discuss &lt;a href="/2131">"Can I Find Someone To Let Me Work From Home?"&lt;/a>&lt;/p>
</content>
  </entry>
  <entry>
    <id>https://csells.github.io/sb6/2129</id>
    <title>The Whiteboard Whisperer: Working Remotely for Microsoft</title>
    <updated>2007-10-22T07:00:00.000Z</updated>
    <category term="spout" label="The Spout"/>
    <published>2007-10-22T07:00:00.000Z</published>
    <summary>I've been at Microsoft about 4.5 years, the whole time a "remote employee," i.e. I work mainly from my home in a suburb of Portland, OR but the teams I've worked for have all been based at Microsoft HQ in Redmond, WA. Microsoft is traditionally a company that moves the bulk of their employees to WA, especially for product team and related duties. Of course, we've got subsidiaries and sales world-wide, as well as the occasional technology team in talent hot spots around the world, but there is a large corpor...</summary>
    <content type="html">&lt;h1>The Whiteboard Whisperer: Working Remotely for Microsoft&lt;/h1>
&lt;P class=MsoNormal>I've been at Microsoft about 4.5 years, the whole time a "remote employee," i.e. I work mainly from my home in a suburb of Portland, OR but the teams I've worked for have all been based at Microsoft HQ in Redmond, WA.&lt;/P>
&lt;P class=MsoNormal>Microsoft is traditionally a company that moves the bulk of their employees to WA, especially for product team and related duties. Of course, we've got subsidiaries and sales world-wide, as well as the occasional technology team in talent hot spots around the world, but there is a large corporate bias towards moving new hires to HQ. In fact, so much so that when we've got open spots, I've learned not to recommend someone that I know won't move.&lt;/P>
&lt;P class=MsoNormal>And yet, there are notable exceptions. Martin Gudgin worked from England for a number of years. Tim Ewald worked from New Hampshire. Scott Hanselman works from Portland, as did Rory Blythe. Sometimes if there's enough need and the right role, the distance bias can be overcome. And when it does, I sometimes get an IM, an email, a phone call or a meeting request so that I can answer the question: how do you do it?&lt;/P>
&lt;P class=MsoNormal>Tune in tomorrow for &lt;a href="/2130">"Can You Focus On Work At Home?"&lt;/a>&lt;/P></content>
  </entry>
  <entry>
    <id>https://csells.github.io/sb6/2128</id>
    <title>Fun With GridView*RowPresenter</title>
    <updated>2007-10-19T07:00:00.000Z</updated>
    <category term="spout" label="The Spout"/>
    <category term="writing" label="Writing"/>
    <published>2007-10-19T07:00:00.000Z</published>
    <summary>I was searching for advanced WPF tree samples the other day and ran into t he tree-list-view sample : Notice how the left-most column does the indenting, while the rest of the columns line up nicely. The code for the tree-view-sample is a little C# and a bunch of sophisticated XAML templates I didn't understand, so I stripped it down to the bare nubbins to discover what was going on. Assume a simple class holding the data: class Person { List &amp;lt; Person &amp;gt; children = &lt;FONT color=#</summary>
    <content type="html">&lt;h1>Fun With GridView*RowPresenter&lt;/h1>
&lt;DIV id=ctl00_Content1_divcontent>
&lt;P>I was searching for advanced WPF tree samples the other day and ran into &lt;A href="http://blogs.msdn.com/atc_avalon_team/archive/2006/03/01/541206.aspx">&lt;FONT color=#000000>t&lt;/FONT>&lt;/A>&lt;A href="http://blogs.msdn.com/atc_avalon_team/archive/2006/03/01/541206.aspx">&lt;FONT color=#000000>he tree-list-view sample&lt;/FONT>&lt;/A>:&lt;/P>
&lt;P>&lt;IMG src="http://blogs.msdn.com/photos/atc_avalon_team/images/541212/original.aspx">&lt;/P>
&lt;P>Notice how the left-most column does the indenting, while the rest of the columns line up nicely. The code for the tree-view-sample is a little C# and a bunch of sophisticated XAML templates I didn't understand, so I stripped it down to the bare nubbins to discover what was going on. Assume a simple class holding the data:&lt;/P>&lt;FONT color=#0000ff>&lt;PRE>class&lt;/FONT> &lt;FONT color=#2b91af>Person&lt;/FONT>&lt;FONT class=style9> {
  &lt;/FONT>&lt;FONT color=#2b91af>List&lt;/FONT>&amp;lt;&lt;FONT color=#2b91af>Person&lt;/FONT>&amp;gt; children = &lt;FONT color=#0000ff>new&lt;/FONT> &lt;FONT color=#2b91af>List&lt;/FONT>&amp;lt;&lt;FONT color=#2b91af>Person&lt;/FONT>&lt;FONT class=style9>&amp;gt;();
  &lt;/FONT>&lt;FONT color=#0000ff>public&lt;/FONT> &lt;FONT color=#0000ff>string&lt;/FONT> Name { &lt;FONT color=#0000ff>get&lt;/FONT>; &lt;FONT color=#0000ff>set&lt;/FONT>&lt;FONT class=style9>; }
  &lt;/FONT>&lt;FONT color=#0000ff>public&lt;/FONT> &lt;FONT color=#0000ff>int&lt;/FONT> Age { &lt;FONT color=#0000ff>get&lt;/FONT>; &lt;FONT color=#0000ff>set&lt;/FONT>&lt;FONT class=style9>; }
  &lt;/FONT>&lt;FONT color=#0000ff>public&lt;/FONT> &lt;FONT color=#2b91af>List&lt;/FONT>&amp;lt;&lt;FONT color=#2b91af>Person&lt;/FONT>&amp;gt; Children { &lt;FONT color=#0000ff>get&lt;/FONT> { &lt;FONT color=#0000ff>return&lt;/FONT>&lt;FONT class=style9> children; } }
}&lt;/PRE>&lt;/FONT>
&lt;P>The juicy bit that makes the tree-list view above possible is the GridViewRowPresenter:&lt;/P>&lt;FONT color=#0000ff>&lt;PRE>&amp;lt;&lt;/FONT>&lt;FONT color=#a31515>Window ...&lt;/FONT>
&lt;FONT color=#ff0000>  xmlns&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#ff0000>local&lt;/FONT>&lt;FONT class=style9 color=#0000ff>="clr-namespace:WpfApplication10"
&lt;/FONT> &lt;FONT color=#ff0000> Title&lt;/FONT>&lt;FONT class=style9 color=#0000ff>="GridView*RowPresenter Fun"&amp;gt;
&lt;/FONT>&lt;FONT color=#0000ff>
  &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>Window.DataContext&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
    &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>local&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#a31515>Person&lt;/FONT>&lt;FONT color=#ff0000> Name&lt;/FONT>&lt;FONT color=#0000ff>="John"&lt;/FONT>&lt;FONT color=#ff0000> Age&lt;/FONT>&lt;FONT class=style9 color=#0000ff>="13" /&amp;gt;
  &amp;lt;/&lt;/FONT>&lt;FONT color=#a31515>Window.DataContext&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;

&lt;STRONG>  &amp;lt;&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>GridViewRowPresenter&lt;/STRONG>&lt;/FONT>&lt;FONT color=#ff0000>&lt;STRONG> Content&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&lt;STRONG>="{&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>Binding&lt;/STRONG>&lt;/FONT>&lt;FONT class=style9 color=#0000ff>&lt;STRONG>}"&amp;gt;
    &amp;lt;&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>GridViewRowPresenter.Columns&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&lt;STRONG>&amp;gt;&lt;/STRONG>&lt;/FONT>
&lt;FONT color=#008000>&lt;STRONG>      &amp;lt;!-- NOTE: must explicitly create the collection --&amp;gt;
        &lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&lt;STRONG>&amp;lt;&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>GridViewColumnCollection&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
&lt;STRONG>          &amp;lt;&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>GridViewColumn&lt;/STRONG>&lt;/FONT>&lt;FONT color=#ff0000>&lt;STRONG> Header&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&lt;STRONG>="Name"&lt;/STRONG>&lt;/FONT>&lt;FONT color=#ff0000> &lt;STRONG>DisplayMemberBinding&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&lt;STRONG>="{&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>Binding&lt;/STRONG>&lt;/FONT>&lt;FONT color=#ff0000>&lt;STRONG> Name&lt;/STRONG>&lt;/FONT>&lt;FONT class=style9 color=#0000ff>&lt;STRONG>}" /&amp;gt;
          &amp;lt;&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>GridViewColumn&lt;/STRONG>&lt;/FONT>&lt;FONT color=#ff0000>&lt;STRONG> Header&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&lt;STRONG>="Age"&lt;/STRONG>&lt;/FONT>&lt;FONT color=#ff0000> &lt;STRONG>DisplayMemberBinding&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&lt;STRONG>="{&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>Binding&lt;/STRONG>&lt;/FONT>&lt;FONT color=#ff0000>&lt;STRONG> Age&lt;/STRONG>&lt;/FONT>&lt;FONT class=style9 color=#0000ff>&lt;STRONG>}" /&amp;gt;
      &amp;lt;/&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>GridViewColumnCollection&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;&lt;STRONG>
    &amp;lt;/&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>GridViewRowPresenter.Columns&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;&lt;STRONG>
&lt;/STRONG>&lt;/FONT>&lt;SPAN class=style1>&lt;STRONG>  &lt;/STRONG>&lt;/SPAN>&lt;FONT color=#0000ff>&lt;STRONG>&amp;lt;/&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>GridViewRowPresenter&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;&lt;STRONG>
&lt;/STRONG>
&amp;lt;/&lt;/FONT>&lt;FONT color=#a31515>Window&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;&lt;/PRE>&lt;/FONT>
&lt;P>Here, we're creating an instance of the GridViewRowPresenter, which is the thing that the ListView creates for you if you use the GridView. Here, we're using it explicitly and setting the columns explicitly, binding it to our data and yielding the following:&lt;/P>
&lt;P>&lt;IMG height=97 alt="" src="/public/writing/FunWithGridViewPresenter_files/img16.jpg" width=377>&lt;/P>
&lt;P>Notice that we're showing a single item, arranged as a row of values according to our column definition above. It's boring and not at all interactive, at least because we don't have a header, which we can get with an instance of the GridViewHeaderRowPresenter:&lt;/P>&lt;FONT color=#0000ff>&lt;PRE>&amp;lt;&lt;/FONT>&lt;FONT color=#a31515>Window.Resources&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
  &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>GridViewColumnCollection&lt;/FONT>&lt;FONT color=#ff0000> x&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#ff0000>Key&lt;/FONT>&lt;FONT class=style9 color=#0000ff>="columns"&amp;gt;
    &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>GridViewColumn&lt;/FONT>&lt;FONT color=#ff0000> Header&lt;/FONT>&lt;FONT color=#0000ff>="Name"&lt;/FONT>&lt;FONT color=#ff0000> DisplayMemberBinding&lt;/FONT>&lt;FONT color=#0000ff>="{&lt;/FONT>&lt;FONT color=#a31515>Binding&lt;/FONT>&lt;FONT color=#ff0000> Name&lt;/FONT>&lt;FONT class=style9 color=#0000ff>}" /&amp;gt;
    &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>GridViewColumn&lt;/FONT>&lt;FONT color=#ff0000> Header&lt;/FONT>&lt;FONT color=#0000ff>="Age"&lt;/FONT>&lt;FONT color=#ff0000> DisplayMemberBinding&lt;/FONT>&lt;FONT color=#0000ff>="{&lt;/FONT>&lt;FONT color=#a31515>Binding&lt;/FONT>&lt;FONT color=#ff0000> Age&lt;/FONT>&lt;FONT class=style9 color=#0000ff>}" /&amp;gt;
  &amp;lt;/&lt;/FONT>&lt;FONT color=#a31515>GridViewColumnCollection&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
&amp;lt;/&lt;/FONT>&lt;FONT color=#a31515>Window.Resources&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;

&amp;lt;&lt;/FONT>&lt;FONT color=#a31515>StackPanel&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
&lt;/FONT>&lt;FONT class=style9 color=#008000>&lt;STRONG>  &amp;lt;!-- NOTE: must share access to same column collection to get shared resizing --&amp;gt;
  &lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&lt;STRONG>&amp;lt;&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>GridViewHeaderRowPresenter&lt;/STRONG>&lt;/FONT>&lt;FONT color=#ff0000>&lt;STRONG> Columns&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&lt;STRONG>="{&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>StaticResource&lt;/STRONG>&lt;/FONT>&lt;FONT color=#ff0000>&lt;STRONG> columns&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&lt;STRONG>}" /&amp;gt;
&lt;/STRONG>  &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>GridViewRowPresenter&lt;/FONT>&lt;FONT color=#ff0000> Content&lt;/FONT>&lt;FONT color=#0000ff>="{&lt;/FONT>&lt;FONT color=#a31515>Binding&lt;/FONT>&lt;FONT color=#0000ff>}"&lt;/FONT>&lt;FONT color=#ff0000> Columns&lt;/FONT>&lt;FONT color=#0000ff>="{&lt;/FONT>&lt;FONT color=#a31515>StaticResource&lt;/FONT>&lt;FONT color=#ff0000> columns&lt;/FONT>&lt;FONT class=style9 color=#0000ff>}" /&amp;gt;
&amp;lt;/&lt;/FONT>&lt;FONT color=#a31515>StackPanel&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;&lt;/PRE>&lt;/FONT>
&lt;P>Here we're creating an instance of the row presenter, passing in a reference to the same columns collection used by the row presenter so that the column sizes and positions are shared between the header row and the row presenters:&lt;/P>
&lt;P>&lt;IMG height=111 alt="" src="/public/writing/FunWithGridViewPresenter_files/img18.jpg" width=369>&lt;/P>
&lt;P>If we want more than one piece of data, all we have to do is use an items control with an item template that in turn creates a row presenter for each item in the collection:&lt;/P>&lt;FONT color=#0000ff>&lt;PRE>&amp;lt;&lt;/FONT>&lt;FONT color=#a31515>Window.DataContext&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
  &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>x&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#a31515>Array&lt;/FONT>&lt;FONT color=#ff0000> Type&lt;/FONT>&lt;FONT color=#0000ff>="{&lt;/FONT>&lt;FONT color=#a31515>x&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#a31515>Type&lt;/FONT>&lt;FONT color=#ff0000> local&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#ff0000>Person&lt;/FONT>&lt;FONT class=style9 color=#0000ff>}"&amp;gt;
    &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>local&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#a31515>Person&lt;/FONT>&lt;FONT color=#ff0000> Name&lt;/FONT>&lt;FONT color=#0000ff>="John"&lt;/FONT>&lt;FONT color=#ff0000> Age&lt;/FONT>&lt;FONT class=style9 color=#0000ff>="13" /&amp;gt;
    &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>local&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#a31515>Person&lt;/FONT>&lt;FONT color=#ff0000> Name&lt;/FONT>&lt;FONT color=#0000ff>="Tom"&lt;/FONT>&lt;FONT color=#ff0000> Age&lt;/FONT>&lt;FONT class=style9 color=#0000ff>="12" /&amp;gt;
  &amp;lt;/&lt;/FONT>&lt;FONT color=#a31515>x&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#a31515>Array&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
&amp;lt;/&lt;/FONT>&lt;FONT color=#a31515>Window.DataContext&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;

&amp;lt;&lt;/FONT>&lt;FONT color=#a31515>Window.Resources&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
  &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>GridViewColumnCollection&lt;/FONT>&lt;FONT color=#ff0000> x&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#ff0000>Key&lt;/FONT>&lt;FONT class=style9 color=#0000ff>="columns"&amp;gt;
    &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>GridViewColumn&lt;/FONT>&lt;FONT color=#ff0000> Header&lt;/FONT>&lt;FONT color=#0000ff>="Name"&lt;/FONT>&lt;FONT color=#ff0000> DisplayMemberBinding&lt;/FONT>&lt;FONT color=#0000ff>="{&lt;/FONT>&lt;FONT color=#a31515>Binding&lt;/FONT>&lt;FONT color=#ff0000> Name&lt;/FONT>&lt;FONT class=style9 color=#0000ff>}" /&amp;gt;
    &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>GridViewColumn&lt;/FONT>&lt;FONT color=#ff0000> Header&lt;/FONT>&lt;FONT color=#0000ff>="Age"&lt;/FONT>&lt;FONT color=#ff0000> DisplayMemberBinding&lt;/FONT>&lt;FONT color=#0000ff>="{&lt;/FONT>&lt;FONT color=#a31515>Binding&lt;/FONT>&lt;FONT color=#ff0000> Age&lt;/FONT>&lt;FONT class=style9 color=#0000ff>}" /&amp;gt;
  &amp;lt;/&lt;/FONT>&lt;FONT color=#a31515>GridViewColumnCollection&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
&amp;lt;/&lt;/FONT>&lt;FONT color=#a31515>Window.Resources&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;

&amp;lt;&lt;/FONT>&lt;FONT color=#a31515>StackPanel&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
  &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>GridViewHeaderRowPresenter&lt;/FONT>&lt;FONT color=#ff0000> Columns&lt;/FONT>&lt;FONT color=#0000ff>="{&lt;/FONT>&lt;FONT color=#a31515>StaticResource&lt;/FONT>&lt;FONT color=#ff0000> columns&lt;/FONT>&lt;FONT class=style9 color=#0000ff>}" /&amp;gt;
&lt;STRONG>  &amp;lt;&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>ItemsControl&lt;/STRONG>&lt;/FONT>&lt;FONT color=#ff0000> &lt;STRONG>ItemsSource&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&lt;STRONG>="{&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>Binding&lt;/STRONG>&lt;/FONT>&lt;FONT class=style9 color=#0000ff>&lt;STRONG>}"&amp;gt;
    &amp;lt;&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>ItemsControl.ItemTemplate&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
&lt;STRONG>      &amp;lt;&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>DataTemplate&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
&lt;STRONG>        &amp;lt;&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>GridViewRowPresenter&lt;/STRONG>&lt;/FONT>&lt;FONT color=#ff0000>&lt;STRONG> Content&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&lt;STRONG>="{&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>Binding&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&lt;STRONG>}"&lt;/STRONG>&lt;/FONT>&lt;FONT color=#ff0000>&lt;STRONG> Columns&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&lt;STRONG>="{&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>StaticResource&lt;/STRONG>&lt;/FONT>&lt;FONT color=#ff0000>&lt;STRONG> columns&lt;/STRONG>&lt;/FONT>&lt;FONT class=style9 color=#0000ff>&lt;STRONG>}" /&amp;gt;
      &amp;lt;/&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>DataTemplate&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;&lt;STRONG>
    &amp;lt;/&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>ItemsControl.ItemTemplate&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;&lt;STRONG>
  &amp;lt;/&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>ItemsControl&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;&lt;STRONG>
&lt;/STRONG>&amp;lt;/&lt;/FONT>&lt;FONT color=#a31515>StackPanel&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;&lt;/PRE>&lt;/FONT>
&lt;P>Now, we've got a stack panel that combines the header to the grid view rows with the grid view rows themselves, one per item in our collection:&lt;/P>
&lt;P>&lt;IMG height=124 alt="" src="/public/writing/FunWithGridViewPresenter_files/img1C.jpg" width=367>&lt;/P>
&lt;P>Now on a rush of discovery and simplicity, I took the next step to show hierarchical data, hosting the data in a TreeView control and using a hierarchical data template so that I could build the tree list view shown above with the tiniest bit of XAML and code:&lt;/P>&lt;FONT color=#0000ff>&lt;PRE>&amp;lt;&lt;/FONT>&lt;FONT color=#a31515>Window.DataContext&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
  &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>x&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#a31515>Array&lt;/FONT>&lt;FONT color=#ff0000> Type&lt;/FONT>&lt;FONT color=#0000ff>="{&lt;/FONT>&lt;FONT color=#a31515>x&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#a31515>Type&lt;/FONT>&lt;FONT color=#ff0000> local&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#ff0000>Person&lt;/FONT>&lt;FONT class=style9 color=#0000ff>}"&amp;gt;
  &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>local&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#a31515>Person&lt;/FONT>&lt;FONT color=#ff0000> Name&lt;/FONT>&lt;FONT color=#0000ff>="Chris"&lt;/FONT>&lt;FONT color=#ff0000> Age&lt;/FONT>&lt;FONT class=style9 color=#0000ff>="38"&amp;gt;
    &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>local&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#a31515>Person.Children&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
      &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>local&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#a31515>Person&lt;/FONT>&lt;FONT color=#ff0000> Name&lt;/FONT>&lt;FONT color=#0000ff>="John"&lt;/FONT>&lt;FONT color=#ff0000> Age&lt;/FONT>&lt;FONT class=style9 color=#0000ff>="13" /&amp;gt;
      &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>local&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#a31515>Person&lt;/FONT>&lt;FONT color=#ff0000> Name&lt;/FONT>&lt;FONT color=#0000ff>="Tom"&lt;/FONT>&lt;FONT color=#ff0000> Age&lt;/FONT>&lt;FONT class=style9 color=#0000ff>="12" /&amp;gt;
    &amp;lt;/&lt;/FONT>&lt;FONT color=#a31515>local&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#a31515>Person.Children&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
  &amp;lt;/&lt;/FONT>&lt;FONT color=#a31515>local&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#a31515>Person&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
  &amp;lt;&lt;/FONT>&lt;FONT color=#a31515>local&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#a31515>Person&lt;/FONT>&lt;FONT color=#ff0000> Name&lt;/FONT>&lt;FONT color=#0000ff>="Melissa"&lt;/FONT>&lt;FONT color=#ff0000> Age&lt;/FONT>&lt;FONT class=style9 color=#0000ff>="39" /&amp;gt;
  &amp;lt;/&lt;/FONT>&lt;FONT color=#a31515>x&lt;/FONT>&lt;FONT color=#0000ff>:&lt;/FONT>&lt;FONT color=#a31515>Array&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
&amp;lt;/&lt;/FONT>&lt;FONT color=#a31515>Window.DataContext&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;&lt;/FONT>&lt;/PRE>&lt;PRE>...&lt;/PRE>&lt;PRE>&lt;SPAN class=style8>&lt;FONT color=#0000ff>&amp;lt;&lt;/FONT>&lt;FONT color=#a31515>StackPanel&lt;/FONT>&lt;/SPAN>&lt;FONT color=#0000ff>&amp;gt;
  &amp;lt;&lt;/FONT>&lt;SPAN class=style8>&lt;FONT color=#a31515>GridViewHeaderRowPresenter&lt;/FONT>&lt;FONT color=#ff0000> Columns&lt;/FONT>&lt;FONT color=#0000ff>="{&lt;/FONT>&lt;FONT color=#a31515>StaticResource&lt;/FONT>&lt;FONT color=#ff0000> columns&lt;/FONT>&lt;/SPAN>&lt;FONT class=style9 color=#0000ff>&lt;SPAN class=style8>}" /&amp;gt;
  &amp;lt;&lt;/SPAN>&lt;SPAN class=style1>&lt;STRONG>TreeView&lt;/STRONG>&lt;/SPAN>&lt;/FONT>&lt;FONT color=#ff0000> ItemsSource&lt;/FONT>&lt;SPAN class=style8>&lt;FONT color=#0000ff>="{&lt;/FONT>&lt;FONT color=#a31515>Binding&lt;/FONT>&lt;/SPAN>&lt;FONT color=#0000ff>&lt;SPAN class=style8>}" &lt;/SPAN>&lt;/FONT>&lt;FONT color=#ff0000>BorderThickness&lt;/FONT>&lt;FONT color=#0000ff>="0"&lt;/FONT>&lt;FONT class=style6 color=#0000ff>&lt;SPAN class=style8>&amp;gt;
    &amp;lt;&lt;/SPAN>&lt;SPAN class=style1>TreeView&lt;/SPAN>&lt;/FONT>&lt;FONT color=#a31515>.ItemTemplate&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
&lt;/FONT>&lt;SPAN class=style1>&lt;STRONG>      &lt;/STRONG>&lt;/SPAN>&lt;SPAN class=style8>&lt;FONT color=#0000ff>&lt;STRONG>&amp;lt;&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>HierarchicalDataTemplate&lt;/STRONG>&lt;/FONT>&lt;/SPAN>&lt;FONT color=#ff0000> &lt;STRONG>ItemsSource&lt;/STRONG>&lt;/FONT>&lt;SPAN class=style8>&lt;FONT color=#0000ff>&lt;STRONG>="{&lt;/STRONG>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>Binding&lt;/STRONG>&lt;/FONT>&lt;FONT color=#ff0000>&lt;STRONG> Children&lt;/STRONG>&lt;/FONT>&lt;/SPAN>&lt;FONT class=style6 color=#0000ff>&lt;SPAN class=style8>&lt;STRONG>}"&amp;gt;
&lt;/STRONG>       &amp;lt;&lt;/SPAN>&lt;/FONT>&lt;SPAN class=style8>&lt;FONT color=#a31515>GridViewRowPresenter&lt;/FONT>&lt;FONT color=#ff0000> Content&lt;/FONT>&lt;FONT color=#0000ff>="{&lt;/FONT>&lt;FONT color=#a31515>Binding&lt;/FONT>&lt;FONT color=#0000ff>}"&lt;/FONT>&lt;FONT color=#ff0000> Columns&lt;/FONT>&lt;FONT color=#0000ff>="{&lt;/FONT>&lt;FONT color=#a31515>StaticResource&lt;/FONT>&lt;FONT color=#ff0000> columns&lt;/FONT>&lt;/SPAN>&lt;FONT class=style9 color=#0000ff>&lt;SPAN class=style8>}" /&amp;gt;
&lt;STRONG>      &amp;lt;/&lt;/STRONG>&lt;/SPAN>&lt;/FONT>&lt;FONT color=#a31515>&lt;STRONG>HierarchicalDataTemplate&lt;/STRONG>&lt;/FONT>&lt;FONT color=#0000ff>&lt;SPAN class=style6>&amp;gt;&lt;/SPAN>&lt;STRONG>
&lt;/STRONG>    &amp;lt;/&lt;SPAN class=style1>TreeView&lt;/SPAN>&lt;/FONT>&lt;FONT color=#a31515>.ItemTemplate&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;
  &amp;lt;/&lt;SPAN class=style1>&lt;STRONG>TreeView&lt;/STRONG>&lt;/SPAN>&amp;gt;
&amp;lt;/&lt;/FONT>&lt;FONT color=#a31515>StackPanel&lt;/FONT>&lt;FONT color=#0000ff>&amp;gt;&lt;/PRE>&lt;/FONT>
&lt;P>Unfortunately, that's where we run into the limit of what we can do without cranking things up a notch:&lt;/P>
&lt;P>&lt;IMG height=161 alt="" src="/public/writing/FunWithGridViewPresenter_files/img30.jpg" width=369>&amp;nbsp;&lt;/P>
&lt;P>Beside the border around the tree view (caused by focus), the worst part about our simple tree-list-view is that, while each grid view row has the proper column sizes and relative positions, because the tree does the indenting, all of the columns are offset, not just the first one. The key to fixing this problem is to put the styling for indenting into the template for the first column only using the CellTemplate property of the GridViewRowColumn, taking over the drawing of the tree view items, which is what &lt;A href="http://blogs.msdn.com/atc_avalon_team/archive/2006/03/01/541206.aspx">&lt;FONT color=#000000>the tree-list-view sample&lt;/FONT>&lt;/A> does.&lt;/P>&lt;/DIV></content>
  </entry>
  <entry>
    <id>https://csells.github.io/sb6/2127</id>
    <title>The Windows Workflow Team Wants to Hear from You!</title>
    <updated>2007-10-19T07:00:00.000Z</updated>
    <published>2007-10-19T07:00:00.000Z</published>
    <summary>Are you using WF but it's not quite right? Are you avoiding WF because it doesn't have the features you need? Now's your chance to influence the future of WF with a quick survey. Vote early, vote often! : )</summary>
    <content type="html">&lt;h1>The Windows Workflow Team Wants to Hear from You!&lt;/h1>
Are you using WF but it's not quite right? Are you avoiding WF because it doesn't have the features you need? Now's your chance to &lt;A href="https://live.datstat.com/MSCSD-Collector/Survey.ashx?Name=WF_Activities_Survey_blog">influence the future of WF with a quick survey&lt;/A>. Vote early, vote often! : )</content>
  </entry>
  <entry>
    <id>https://csells.github.io/sb6/2126</id>
    <title>Yahtzee Croshaw -- You're My Hero!</title>
    <updated>2007-10-03T07:00:00.000Z</updated>
    <category term="fun" label="Fun"/>
    <published>2007-10-03T07:00:00.000Z</published>
    <summary>First it was the Halo 3 review (which I can't agree or disagree with yet because I'm still stuck on level one) which a Wii zealot forwarded to me because he likes to send me links to negative portrayals of anything MS-related (like that's a challenge to find : ), then it was the BioShock review (a game I never figured out the cool part of), then&amp;nbsp; his POV on the console wars (I'm proudly a member of the frat-boy demographic!)&amp;nbsp;and finally it was the Tomb Raider Anniversary revi</summary>
    <content type="html">&lt;h1>Yahtzee Croshaw -- You're My Hero!&lt;/h1>
&lt;P>First it was &lt;A href="http://www.escapistmagazine.com/articles/view/editorials/zeropunctuation/2304-Zero-Punctuation-Halo-3">the Halo 3 review&lt;/A> (which I can't agree or disagree with yet because I'm still stuck on level one) which a Wii zealot forwarded to me because he likes to send me links to negative portrayals of anything MS-related (like that's a challenge to find : ), then it was &lt;A href="http://www.escapistmagazine.com/articles/view/editorials/zeropunctuation/1394-Zero-Punctuation-BioShock">the BioShock review&lt;/A> (a game I never figured out the cool part of), then&amp;nbsp;&lt;A href="http://www.escapistmagazine.com/articles/view/editorials/zeropunctuation/1383-Zero-Punctuation-Console-Rundown">his POV on the console wars&lt;/A> (I'm proudly a member of the frat-boy demographic!)&amp;nbsp;and finally it was &lt;A href="http://www.escapistmagazine.com/articles/view/editorials/zeropunctuation/1490-Zero-Punctuation-Tomb-Raider-Anniversary">the Tomb Raider Anniversary review&lt;/A> (a game I haven't played since v1 and preferred the Apple ][+ equivalent) which had me laughing out loud.&lt;/P>
&lt;P>Agree with him or not, you gotta &lt;A href="http://www.escapistmagazine.com/profiles/view/Yahtzee%20Croshaw/posts">appreciate Yahtzee's style&lt;/A>.&lt;/P></content>
  </entry>
  <entry>
    <id>https://csells.github.io/sb6/2125</id>
    <title>Releasing the Source Code for the .NET Framework Libraries!</title>
    <updated>2007-10-03T07:00:00.000Z</updated>
    <category term="tools" label="Tools"/>
    <published>2007-10-03T07:00:00.000Z</published>
    <summary>After programming with MFC (a lot!) and writing the ATL book, it was *very* difficult for me to live in a world without the source code to figure out how something was working. All of us have since moved over to Lutz's most excellent Reflector, but that's still no substitute for actually stepping in and now ScottGu has announced that we'll have the ability to browse and debug with the.NET library source code, integrated into VS2008 : Wahoo! </summary>
    <content type="html">&lt;h1>Releasing the Source Code for the .NET Framework Libraries!&lt;/h1>
&lt;P>After programming with MFC (a lot!) and writing the ATL book, it was *very* difficult for me to live in a world without the source code to figure out how something was working. All of us have since moved over to &lt;A href="http://www.aisto.com/roeder/dotnet/">Lutz's most excellent Reflector&lt;/A>, but that's still no substitute for actually stepping in and now ScottGu has announced that we'll have &lt;A href="http://weblogs.asp.net/scottgu/archive/2007/10/03/releasing-the-source-code-for-the-net-framework-libraries.aspx">the ability to browse and debug with the .NET library source code, integrated into VS2008&lt;/A>:&lt;/P>
&lt;P>&lt;IMG src="http://www.scottgu.com/blogposts/source/step5.jpg">&lt;/P>
&lt;P>Wahoo!&lt;/P></content>
  </entry>
  <entry>
    <id>https://csells.github.io/sb6/2124</id>
    <title>I'm an "Uber Cool High Nerd"</title>
    <updated>2007-09-09T07:00:00.000Z</updated>
    <category term="fun" label="Fun"/>
    <published>2007-09-09T07:00:00.000Z</published>
    <summary></summary>
    <content type="html">&lt;h1>I'm an "Uber Cool High Nerd"&lt;/h1>
&lt;A href="http://www.nerdtests.com/nt2ref.html">&lt;IMG alt="NerdTests.com says I'm an Uber Cool High Nerd.  What are you?  Click here!" src="http://www.nerdtests.com/images/badge/nt2/d9ce90a8f93e92b0.png"> &lt;/A></content>
  </entry>
  <entry>
    <id>https://csells.github.io/sb6/2123</id>
    <title>20 Timeless Money Rules</title>
    <updated>2007-09-01T07:00:00.000Z</updated>
    <category term="money" label="Money"/>
    <published>2007-09-01T07:00:00.000Z</published>
    <summary>Save yourself the Suzy whoever and read this instead : Be humble Take calculated risks Have an emergency fund Mix it up It's the portfolio, stupid Average is the new best Practice patience Don't time the market Be a cheapskate Don't follow the crowd Buy low Invest abroad Keep perspective Just do it Borrow responsibly Talk to your spouse Exit gracefully Pay only your share Give wisely Keep money in its place Following this advice will put you in the top 20% of investors in the world. </summary>
    <content type="html">&lt;h1>20 Timeless Money Rules&lt;/h1>
&lt;P>Save yourself the Suzy whoever and &lt;A href="http://money.cnn.com/galleries/2007/moneymag/0708/gallery.20_rules.moneymag/index.html">read this instead&lt;/A>:&lt;/P>
&lt;OL>
&lt;LI>Be humble&lt;/LI>
&lt;LI>Take calculated risks&lt;/LI>
&lt;LI>Have an emergency fund&lt;/LI>
&lt;LI>Mix it up&lt;/LI>
&lt;LI>It's the portfolio, stupid&lt;/LI>
&lt;LI>Average is the new best&lt;/LI>
&lt;LI>Practice patience&lt;/LI>
&lt;LI>Don't time the market&lt;/LI>
&lt;LI>Be a cheapskate&lt;/LI>
&lt;LI>Don't follow the crowd&lt;/LI>
&lt;LI>Buy low&lt;/LI>
&lt;LI>Invest abroad&lt;/LI>
&lt;LI>Keep perspective&lt;/LI>
&lt;LI>Just do it&lt;/LI>
&lt;LI>Borrow responsibly&lt;/LI>
&lt;LI>Talk to your spouse&lt;/LI>
&lt;LI>Exit gracefully&lt;/LI>
&lt;LI>Pay only your share&lt;/LI>
&lt;LI>Give wisely&lt;/LI>
&lt;LI>Keep money in its place&lt;/LI>&lt;/OL>
&lt;P>Following this advice will put you in the top 20% of investors in the world.&lt;/P></content>
  </entry>
  <entry>
    <id>https://csells.github.io/sb6/2122</id>
    <title>"Programming WPF" (finally) shipping!</title>
    <updated>2007-08-28T07:00:00.000Z</updated>
    <category term="spout" label="The Spout"/>
    <category term="writing" label="Writing"/>
    <published>2007-08-28T07:00:00.000Z</published>
    <summary>John Osborn of O'Reilly and Associates had this to say in my morning email: "Congratulations, guys. The book is printed and shipping! Just got my copy this morning and it looks great. A very substantial body of work, to say the least. "Thanks for all of your hard work on this project. Now to crank up the PR machine and make sure no book shelf is without a copy." Wahoo! </summary>
    <content type="html">&lt;h1>"Programming WPF" (finally) shipping!&lt;/h1>
&lt;P>John Osborn of O'Reilly and Associates had this to say in my morning email:&lt;/P>
&lt;BLOCKQUOTE dir=ltr style="MARGIN-RIGHT: 0px">
&lt;P>&lt;EM>"Congratulations, guys. &lt;/EM>&lt;A href="http://www.amazon.com/Programming-WPF-Chris-Sells/dp/0596510373/">&lt;EM>The book&lt;/EM>&lt;/A>&lt;EM> is printed and shipping! Just got my copy this morning and it looks great. A very substantial body of work, to say the least. &lt;/EM>&lt;/P>
&lt;P>&lt;EM>"Thanks for all of your hard work on this project. Now to crank up the PR machine and make sure no book shelf is without a copy."&lt;/EM>&lt;/P>&lt;/BLOCKQUOTE>
&lt;P>Wahoo!&lt;/P></content>
  </entry>
  <entry>
    <id>https://csells.github.io/sb6/wpfbook</id>
    <title>Programming WPF</title>
    <updated>2007-08-28T07:00:00.000Z</updated>
    <link rel="enclosure" type="image/jpg" href="/public/writing/wpfbook/wpfcover.JPG"/>
    <category term="book" label="Books"/>
    <published>2007-08-28T07:00:00.000Z</published>
    <summary>Programming WPF By Ian Griffiths and Chris Sells Order Yours Today! Buy Programming WPF, 2nd edition today! Table of Contents Foreword (Don Box) Foreword (ChrisAn) Preface 1: Hello, Avalon 2: Applications &amp;amp; Settings 3: Layout 4: Input 5: Controls 6: Simple Data Binding 7: Binding to List Data 8: Styles 9: Control Templates 10: Windows &amp;amp; Dialogs 11: Navigation 12: Resources 13: Graphics 14: Documents 15: Printing 16: Animation &amp;amp; Media 17: 3D 18: Custom Controls A: XAML &lt;</summary>
    <content type="html">&lt;h1>Programming WPF&lt;/h1>
&lt;h2>Programming WPF&lt;/h2>
&lt;p>
&lt;a href="http://www.amazon.com/exec/obidos/ASIN/0596510373/chrissells">
&lt;img border="0" src="/public/writing/wpfbook/wpfcover.JPG" width="145" height="190">&lt;/a>&lt;/p>
&lt;p>By Ian Griffiths and Chris Sells&lt;/p>
&lt;h2>Order Yours Today!&lt;/h2>
&lt;p>
&lt;a href="http://www.amazon.com/exec/obidos/ASIN/0596510373/chrissells">
Buy Programming WPF, 2nd edition today!&lt;/a>&lt;/p>
&lt;h2>Table of Contents&lt;/h2>
&lt;ul>
	&lt;li>Foreword (Don Box)&lt;/li>
	&lt;li>Foreword (ChrisAn)&lt;/li>
	&lt;li>Preface&lt;/li>
	&lt;li>1: Hello, Avalon&lt;/li>
	&lt;li>2: Applications &amp;amp; Settings&lt;/li>
	&lt;li>3: Layout&lt;/li>
	&lt;li>4: Input&lt;/li>
	&lt;li>5: Controls&lt;/li>
	&lt;li>6: Simple Data Binding&lt;/li>
	&lt;li>7: Binding to List Data&lt;/li>
	&lt;li>8: Styles&lt;/li>
	&lt;li>9: Control Templates&lt;/li>
	&lt;li>10: Windows &amp;amp; Dialogs&lt;/li>
	&lt;li>11: Navigation&lt;/li>
	&lt;li>12: Resources&lt;/li>
	&lt;li>13: Graphics&lt;/li>
	&lt;li>14: Documents&lt;/li>
	&lt;li>15: Printing&lt;/li>
	&lt;li>16: Animation &amp;amp; Media&lt;/li>
	&lt;li>17: 3D&lt;/li>
	&lt;li>18: Custom Controls&lt;/li>
	&lt;li>A: XAML&lt;/li>
	&lt;li>B: Interoperability&lt;/li>
	&lt;li>C: Multithreaded Programming&lt;/li>
	&lt;li>D: WPF Base Types&lt;/li>
	&lt;li>E: Silverlight (by Shawn Wildermuth)&lt;/li>
&lt;/ul>
&lt;h2>Samples&lt;/h2>
&lt;p>&lt;a href="/public/writing/wpfbook/RtmBookSamples.zip">Code samples&lt;/a>&lt;/p>

</content>
  </entry>
  <entry>
    <id>https://csells.github.io/sb6/2121</id>
    <title>Shawn has prepared Genghis v0.8</title>
    <updated>2007-08-24T07:00:00.000Z</updated>
    <category term="tools" label="Tools"/>
    <published>2007-08-24T07:00:00.000Z</published>
    <summary>Shawn Wildermuth has prepared a v0.8 release of Genghis that includes a bunch of stuff that the folks that put the v0.6 release together dropped. The v0.8 release has all the good stuff from the v0.5 release and all the new stuff from the v0.6 release in a.NET 2.0 package. Shawn's really done all the work for Genghis since I came to Microsoft.&amp;nbsp;Thanks, Shawn. </summary>
    <content type="html">&lt;h1>Shawn has prepared Genghis v0.8&lt;/h1>
&lt;P>&lt;A href="http://adoguy.com/2007/08/24/Genghis_v0_8_Released.aspx">Shawn Wildermuth&lt;/A> has prepared &lt;A href="http://codeplex.com/genghis">a v0.8 release of Genghis&lt;/A> that includes a bunch of stuff that the folks that put the v0.6 release together dropped. The v0.8 release has all the good stuff from the v0.5 release and all the new stuff from the v0.6 release in a .NET 2.0 package.&lt;/P>
&lt;P>Shawn's really done all the work for Genghis since I came to Microsoft.&amp;nbsp;Thanks, Shawn.&lt;/P></content>
  </entry>
  <entry>
    <id>https://csells.github.io/sb6/2120</id>
    <title>Duck Typing for .NET!</title>
    <updated>2007-08-17T07:00:00.000Z</updated>
    <category term=".net" label=".NET"/>
    <published>2007-08-17T07:00:00.000Z</published>
    <summary>For structural typing fans (and they'll be more of you over time -- trust me), David Meyer has posted a duck typing library for.NET. There are many reasons this is cool, but in summary, it allows for many of the dynamic features of languages like Python and Ruby to used used in any.NET language. Very cool.</summary>
    <content type="html">&lt;h1>Duck Typing for .NET!&lt;/h1>
For structural typing fans (and they'll be more of you over time -- trust me), David Meyer has posted &lt;A href="http://www.deftflux.net/blog/page/Duck-Typing-Project.aspx">a duck typing library for .NET&lt;/A>. There are many reasons this is cool, but in summary, it allows for many of the dynamic features of languages like Python and Ruby to used used in any .NET language. Very cool.</content>
  </entry>
  <entry>
    <id>https://csells.github.io/sb6/2119</id>
    <title>How to write a book - the short honest truth</title>
    <updated>2007-08-17T07:00:00.000Z</updated>
    <category term="spout" label="The Spout"/>
    <category term="writing" label="Writing"/>
    <published>2007-08-17T07:00:00.000Z</published>
    <summary>I found this on digg.com and liked the short, honest style. Bottom line: anyone can write a book; it takes real work to write a good book.</summary>
    <content type="html">&lt;h1>How to write a book - the short honest truth&lt;/h1>
I found &lt;A href="http://www.scottberkun.com/blog/2007/how-to-write-a-book-the-short-honest-truth/">this&lt;/A> on &lt;A href="http://digg.com">digg.com&lt;/A> and liked the short, honest style. Bottom line: anyone can write a book; it takes real work to write a good book.</content>
  </entry>
  <entry>
    <id>https://csells.github.io/sb6/2118</id>
    <title>"How you doin'?"</title>
    <updated>2007-08-14T07:00:00.000Z</updated>
    <category term="spout" label="The Spout"/>
    <category term="writing" label="Writing"/>
    <published>2007-08-14T07:00:00.000Z</published>
    <summary>I wanted to figure out how to emit a new CLR type at run-time using Reflection.Emit and Google revealed the following article: Generating Code at Run Time With Reflection.Emit &amp;nbsp;in DDJ.As usual, I skip most of the initial prose to the first code sample (I don't need some author's fancy intro -- I just want the code!). Then, I'm reading along and I find some phrases I enjoy, e.g. "If you plan on generating lots of calls to Console.WriteLine(), you should be aware that the ILGenerator class exposes a meth...</summary>
    <content type="html">&lt;h1>"How you doin'?"&lt;/h1>
&lt;P>I wanted to figure out how to emit a new CLR type at run-time using Reflection.Emit and Google revealed the following article: &lt;A href="http://www.ddj.com/windows/184416570">Generating Code at Run Time With Reflection.Emit&lt;/A>&amp;nbsp;in DDJ.As usual, I skip most of the initial prose to the first code sample (I don't need some author's fancy intro -- I just want the code!). Then, I'm reading along and I find some phrases I enjoy, e.g.&lt;/P>
&lt;BLOCKQUOTE dir=ltr style="MARGIN-RIGHT: 0px">
&lt;P>&lt;EM>"If you plan on generating lots of calls to Console.WriteLine(), you should be aware that the ILGenerator class exposes a method for just that purpose: ILGenerator.EmitWriteLine() generates the exact same code as our example. (Could this be the first assembler ever devised that includes explicit support for creating "Hello, World" sample programs?)"&lt;/EM>&lt;/P>&lt;/BLOCKQUOTE>
&lt;P>and&lt;/P>
&lt;BLOCKQUOTE dir=ltr style="MARGIN-RIGHT: 0px">
&lt;P>&lt;EM>"When creating a dynamic assembly with Reflection.Emit, you must declare, ahead of time, what you plan on doing with it. Do you want to run it or save it? Or both? (Of course, if your answer is 'neither,' then you should probably should have stopped reading this article long ago.)"&lt;/EM>&lt;/P>&lt;/BLOCKQUOTE>
&lt;P>By the end of the piece, I've enjoyed the story and it told me exactly what I wanted and then some, pointing out some pitfalls I would've missed, being entertaining along the way. It's rare that I enjoy an article so much and I'm thinking I should send the author an email, congratulating him/her on his/her tight, fun prose.&lt;/P>
&lt;P>And then I get to the author bios:&lt;/P>
&lt;BLOCKQUOTE dir=ltr style="MARGIN-RIGHT: 0px">
&lt;P>&lt;EM>"&lt;STRONG>Chris Sells&lt;/STRONG> is a blah blah blah."&lt;/EM>&lt;/P>
&lt;P>&lt;EM>"&lt;STRONG>Shawn Van Ness&lt;/STRONG> is a blah blah blah."&lt;/EM>&lt;/P>&lt;/BLOCKQUOTE>
&lt;P>Of course, now I remember Shawn writing this piece and me helping him with the polish. At this point, I feel a bit like the Joey Tribbiani of Windows technical writing...&lt;/P></content>
  </entry>
</feed>